
...:::::

  A Step by Step Guide to Setup the Raspberry Pi Including WebAppCenter
							:::::...

Revision 1.0
Edited by Sven Ginka (sven.ginka@gmail.com)

Hardware Requirements
  * Raspberry Pi - 
  * Power Supply - 
  * SD Card
  * Ethernet Cable
  * Wireless Adapter - 
  * Display (DVI or HDMI, TV set) *(1)
  * USB Keyboard *(1)
  * USB Mouse *(1)


  Note *(1)
      It is possible to setup the Raspberry Pi without the use of display, keyboard and mouse. There
      are several tutorials out there. However from our point of view they are reserved
      for advanced users. Thus display, keyboard and mouse will be used here.
      
itinerary 
  1. Download and Prepare the Raspbian Image
  2. Setup Wired Ethernet Network Connection
  3. Remote Control - Running the Raspberry with or without Display
  4. Install Software Packages
  5. Release the Serial Port
  6. Start WebAppCenter

============================================================

D I S C L A I M E R

============================================================

Information has been carefully checked and is believed to be accurate; however, no responsibility is assumed for inaccuracies.

The WebAppCenter Team reserves the right to make changes without further notice to any products to improve reliability, function, or design. The WebAppCenter Team does not assume any liability arising out of the application or use of any product or circuit; neither does it convey any license under its patent rights of others.

The general policy of the WebAppCenter Team does not recommend the use of its products in life support or aircraft applications wherein a failure or malfunction of the product may directly threaten life or injury. Per the terms and conditions of sales of the WebAppCenter Team, the user of WebAppCenter Teams products in life support or aircraft applications assumes all risks of such use and indemnifies WebAppCenter Team against all damages.   

============================================================

Installation of WebAppCenter on Raspberry Pi in very detail

============================================================

  1. Download and Prepare the Raspbian Image

    1.1 Download
      2013-09-25-wheezy-raspbian
      Link: http://downloads.raspberrypi.org/raspbian/images/raspbian-2013-09-27/2013-09-25-wheezy-raspbian.zip
      SHA1: http://downloads.raspberrypi.org/raspbian/images/raspbian-2013-09-27/2013-09-25-wheezy-raspbian.zip.sha1
      
      Double check sha1 check-sum 

    1.3 Selecting the SD Card
      As many people complained about not well running SD Cards someone created a list
      of SD Cards that are suggested for the Raspberry Pi. - http://elinux.org/RPi_SD_cards

    1.2 Setting up SD Card
      There are several how-to manuals out there. Depending on the operating system we are using
      we chose out of the following docs:
      * Windows - http://elinux.org/RPi_Easy_SD_Card_Setup#Flashing_the_SD_Card_using_Windows
      * MAC - http://elinux.org/RPi_Easy_SD_Card_Setup#Flashing_the_SD_card_using_Mac_OSX
      * Linux - http://elinux.org/RPi_Easy_SD_Card_Setup#Flashing_the_SD_Card_using_Linux_.28including_on_a_Pi.21.29

    1.3 Check if Raspberry Boots as Expected
      Disconnect all adapters, shields etc. and connect only a display, 
      the SD Card and Power - http://www.raspberrypi.org/quick-start-guide
      Recommandes is also a keyboard and mouse.
      Now see what happens when finally plugging in the power connector
	1. Usually we should see the "rainbow screen" first
	2. There should be some "ACT" LED toggling near the ethernet socket
	3. Linux is booting and will output lots of text on the screen
	4. finally we can see the graphical descktop LXDE 
	5. done - Raspberry is working! Congratulation.
	6. Lean back, grab a beer and endjoy a running Raspberry installation.
	
      Note: If something wont run as expected I would first consider using a different SD Card.
	    I had several problems to run specific Cards. 
	
  2. Setup Wired Ethernet Network Connection
  
    2.1 Pre Info
      The Raspbian is configured to run as DHCP client as soon we plug in a network
      cable and connect it to a router that runs a DHCP server it receives an IP and
      is able to communicate. Usally any internet gateway or router should be sufficient. 
      
      Thus we only need to plugin the cable and see what happens.
      
    2.2 Figure out Which IP the Raspberry Uses
      When beeing connected with display, keyboard and mouse. The easiest way is
      to open a terminal and type
	>>sudo ip addr show
      Many alternative ways can be found here - http://raspberrypi.stackexchange.com/questions/1409/easiest-way-to-show-my-ip-address
      
      If no display is connected things can be harder. However please note that
      a naming service will be installed and the Raspberry will be accessable
      through clear text like "raspi.local". This makes things much easier. Just
      read on :-).
      
      
    2.3 Check Internet Connection
      A pretty simple way to chech the internet connection is to open a browser
      like firefox and direct it to http://www.raspberrypi.org/
      In case it provides the official Raspberry page we are connected!
      
  3. Remote Control - Running the Raspberry with or without Display
  
    3.1 Pre Info
      The Raspberry can be controlled with display, keyboard and mouse. This is
      great when running the Pi desktop-like. For standalone tasks such as wireless
      router or gateway, music server, email server etc. the Raspberry can save
      electrical energy and space on your desktop when disconnecting the display, 
      keyboard and mouse.
      As we still want to have full control over the Pi it just needs network connection,
      which already has been established. The control transportation protocol is SSH.
      The Raspberry runs the SSH server per default and is waiting for control input. Any device 
      that runs a SSH client is able to operate as remote controller.
      
	* SSH on Windows 
	  - SSHSecureShellClient - http://tu-dresden.de/die_tu_dresden/zentrale_einrichtungen/zih/dienste/datennetz_dienste/secure_shell/dateien/SSHSecureShellClient-3.2.9.exe
	  - Putty - http://www.putty.org/
	* SSH on MAC - 
	* SSH on Linux - build in
	* SSH on iPAD - 
	* SSH on Android - 
      
    3.2 Remote Connection to the Raspberry Pi
      As the SSH server is enabled by default setting up the connection is straigt forward.
      Assuming the Raspberry Pi is powered up and connected to the network. We just open
      the SSH Client on any of the devices (PC, MAC, tablet, ...) and enter the
      connection details which are
	* current IP of the Raspberry ex. 192.168.0.104
	* username per default "pi"
	* password per default "raspberry"
      and finally connect.
      
      A text-box opens and displays welcome information and finally the command line. The
      command line is our best friend as any operation of the pi can be controlled 
      by it.
      
    3.3 Optimizing Performance
      It is possible to increase performance by disabling the X - desktop environment (LXDE) and
      thus saving ressources such as available RAM and available CPU power due to less
      running services. This is great as we do not see the LXDE anyway when remote
      connecting via SSH.
      
      A short description is here - http://www.raspberrypi.org/phpBB3/viewtopic.php?f=26&t=11914
   
     
  4. Install Software Packages
  
    4.1 Pre Info
      We might need the following packages for displaying web pages and accessing databases. The
      packages we are installing are called LAMP - Linux Apache Mysql Php.
      
      LAMP 
      * apache
      * php
      * mysql
	
      For compiling sketches the arduino environment with the AVR gcc needs to be installed
      
      * arduino-core (which includes)
	* avr libs
	* avr gcc
	* avr utils
	* avrdude     
      
      The WebAppCenter is our target application which runs as web access for diverse
      devices such as PC, laptop, tablet or phone. For installation instructions please 
      read on.
      
    4.2 Install LAMP 
      Update the local package cache
	> sudo apt-get update
            
      install needed packages
	> sudo apt-get install apache2 php5 libapache2-mod-php5 mysql-server mysql-client php5-mysql phpmyadmin
	
	- You will be asked to setup the password for mysql. 
	- When asked to chose between apache2 and lighttp I opted in for apache2
	
      After the process is finished it returns to command line. We are now able to 
      check if the web server is running. Therefore we open a browser and
      enter the IP of our Raspberry ex. http://192.168.0.131
      A page with "It works!" in big letters should appear.
      
    4.3 Install Arduino Environment
      Install standard packages first
	> sudo apt-get install arduino-core
	> sudo apt-get install arduino-mk

      
      We need to patch the avrdude and therefore download the patch, extract files
      and copy them into the expected places.
      
	> cd /tmp/
	> wget http://metagon.bplaced.net/WebAppCenter/avrdude_patch.zip
	> unzip avrdude_patch.zip
	> sudo cp -f avrdude.conf /etc/
	> sudo cp -f avrdude /usr/bin/
	> sudo cp libelf.so.1 /usr/lib/
	> sudo ln -s /etc/avrdude.conf /usr/local/etc/avrdude.conf
	> sudo cp Arduino.mk /usr/share/arduino/
	> sudo cp -f boards.txt /usr/share/arduino/hardware/arduino/
	
	boards.txt > /usr/share/arduino/hardware/arduino
	programmers.txt > /usr/share/arduino/hardware/arduino
	pins_arduino.h > /usr/share/arduino/hardware/arduino/variants/copiino
	
	/usr/share/arduino/hardware/tools/
	  - check-sudo
	  - reset-chip
	  - run-chip
	  - check-fuses
	  - burn-chip
	  - boards.txt
    
      The SPI driver is disabled per default thus we need to enable it by editing
      the /etc/modules file
	> sudo nano /etc/modules
	
      Insert the following line "spi_bcm2708" after "snd-bcm2835". Then leave the
      editor by typing CTRL+X. The file should look like this.
      
	    # /etc/modules: kernel modules to load at boot time.
	    #
	    # This file contains the names of kernel modules that should be loaded
	    # at boot time, one per line. Lines beginning with "#" are ignored.
	    # Parameters can be specified after the module name.

	    snd-bcm2835
	    spi_bcm2708

      To make the changes take effect so a reboot is neccessary.
	> sudo reboot
      
    4.4 Install WebAppCenter
      Download the package and move it to into the apache server directory.
	> cd /tmp/
	> wget http://metagon.bplaced.net/WebAppCenter/WebAppCenter.tar.gz
	> tar -pxf WebAppCenter.tar.gz
	> sudo cp -rpf WebAppCenter /var/www/
      
      As we are showing system information and want to have full access to
      the Raspberry the sudo needs to be adopted.
	> cd /etc/sudoers.d/
	> sudo nano WebAppCenter
      Insert the following line and leave with CTRL+X     
	> www-data ALL=(ALL) NOPASSWD: ALL
      Save the file.
      
	
  5. Release the Serial Port
    
      The serial port provided by the Raspberry is setup to show boot logs and enter a terminal session. 
      As some controller projects need the serial port for communication we need to put it in user mode.
      
      A detailed description of how to release the console mode and enter user mode is
      here - http://www.raspberry-projects.com/pi/pi-operating-systems/raspbian/io-pins-raspbian/uart-pins

    
  6. Start WebAppCenter
    
      Open a browser on PC, laptop, tablet or phone and browse
      to your IP and attach "WebAppCenter" 
      
      ex. http://192.168.0.131/WebAppCenter/
      
      
  
  
  ------------------- open issues
  
  - reset schlägt fehl, wenn hfuse zunächst temporär auf 0x00 gesetzt wird,
    und anschliessend wieder auf orig. 
    -> strom aus/an behebt das problem
    -> alternativ kann man das standard-andreas-blinky reinladen
    -> watchdog wird bei hfuse=0x00 aktiviert, vermutlich deaktivert ein reset
       mit hfuse=0x10 dennoch nicht den watchdog
  
  - hin und wieder schlägt ein programmierzyklus fehl
      
  - hex-files aus firmware up/download kann man nicht aus dem browser laden
  
  